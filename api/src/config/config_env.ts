import dotenv from 'dotenv'
import IEnv from '../interfaces/Env.interface'

dotenv.config({
    path: process.env.NODE_ENV === 'production' ? '.env.production' : '.env',
})

const {
    NODE_ENV = '',
    NAME = '',
    PORT = '',
    DB_DEV_URL = '',
    DB_PROD_URL = '',
    V1_API_PREFIX = '',
    FRONTEND_URL = '',
    JWT_SECRET = '',
    JWT_SECRET_REFRESH = '',
    JWT_EXPIRES_IN = '',
    JWT_EXPIRES_IN_REFRESH = '',
    ERROR_STATUS_CODE = '',
    ERROR_MESSAGE = '',
    ERROR_CODE = '',
    UNAUTHORIZED_CODE = '',
    UNAUTHENTICATED_CODE = '',
    ME_UNAUTHENTICATED_CODE = '',
    INVALID_TOKEN_CODE = '',
    DATA_NOT_FOUND_CODE = '',
    INVALID_DATA_CODE = '',
    DUPLICATE_DATA_CODE = '',
    TOOMANYREQUEST_CODE = '',
    GOOGLE_AUTH_CLIENT_ID = '',
    GOOGLE_RECAPTCHA_SECRET = '',
    GITHUB_AUTH_CLIENT_ID= '',
    GITHUB_AUTH_SECRET= '',
    MAILGUN_API_KEY = '',
    MAILGUN_DOMINE = '',
    MAILGUN_FROM = '',
    AWS_S3_KEY = '',
    AWS_S3_SECRET = '',
    AWS_S3_REGION = '',
    AWS_S3_BUCKET_NAME = '',
    AWS_S3_FOLDER_PROJECT_IMAGES = '',
    RESET_PASSWORD_SECRET = '',
    RESET_PASSWORD_EXPIRE_IN = '',
    DB_TABLE_USERS = '',
    DB_TABLE_USER_FOLLOWS = '',
    DB_TABLE_ROLES = '',
    DB_TABLE_USERS_AUTH_PROVIDERS = '',
    DB_TABLE_SECURITY = '',
    DB_TABLE_ENTERPRISES = '',
    DB_TABLE_PROJECTS = '',
    DB_TABLE_PROJECTS_LIKES = '',
    DB_TABLE_PROJECTS_SAVES = '',
    DB_TABLE_PROJECT_SITES = '',
    DB_TABLE_PROJECT_SITE_PROVIDERS = '',
    DB_TABLE_PROJECT_IMAGES = '',
    DB_TABLE_PROJECT_VIDEOS = '',
    DB_TABLE_PROJECT_MEMBERS = '',
    DB_TABLE_PROJECT_CATEGORIES = '',
    DB_TABLE_PROJECT_CATEGORY_TYPES = '',
    DB_TABLE_TAGS = '',
    DB_TABLE_PROJECT_TAGS = '',
    DB_TABLE_PROJECT_SAVES = '',
    DB_TABLE_PROJECT_LIKES = '',
    DB_TABLE_PROJECT_COMMENTS = '',
    DB_TABLE_PROJECT_COMMENT_LIKES = '',
    DB_TABLE_UNIVERSES = '',
    DB_TABLE_SAGAS = '',
    DB_TABLE_BOOKS = '',
    DB_TABLE_CHAPTERS = '',
    DB_TABLE_CHARACTERS = '',
    DB_TABLE_CHARACTER_APPEARANCES = '',
    DB_TABLE_CHARACTER_RELATIONSHIPS = '',
    DB_TABLE_CHARACTER_TIMELINE = '',
} = process.env

// Determinar la URL de la base de datos segÃºn el entorno
const getDatabaseUrl = () => {
    if (NODE_ENV === 'production') {
        return DB_PROD_URL || DB_DEV_URL
    }
    return DB_DEV_URL
}

export const env: IEnv = {
    NODE_ENV,
    NAME,
    PORT: parseInt(PORT, 10),
    DB_URL: getDatabaseUrl(),
    V1_API_PREFIX,
    FRONTEND_URL,
    JWT_SECRET,
    JWT_SECRET_REFRESH,
    JWT_EXPIRES_IN: parseInt(JWT_EXPIRES_IN, 10),
    JWT_EXPIRES_IN_REFRESH: parseInt(JWT_EXPIRES_IN_REFRESH, 10),
    ERROR_STATUS_CODE: parseInt(ERROR_STATUS_CODE, 10),
    ERROR_MESSAGE,
    ERROR_CODE,
    UNAUTHORIZED_CODE,
    UNAUTHENTICATED_CODE,
    ME_UNAUTHENTICATED_CODE,
    INVALID_TOKEN_CODE,
    DATA_NOT_FOUND_CODE,
    INVALID_DATA_CODE,
    DUPLICATE_DATA_CODE,
    TOOMANYREQUEST_CODE,
    GOOGLE_AUTH_CLIENT_ID,
    GOOGLE_RECAPTCHA_SECRET,
    GITHUB_AUTH_CLIENT_ID,
    GITHUB_AUTH_SECRET,
    MAILGUN_API_KEY,
    MAILGUN_DOMINE,
    MAILGUN_FROM,
    AWS_S3_KEY,
    AWS_S3_SECRET,
    AWS_S3_REGION,
    AWS_S3_BUCKET_NAME,
    AWS_S3_FOLDER_PROJECT_IMAGES,
    RESET_PASSWORD_SECRET,
    RESET_PASSWORD_EXPIRE_IN: parseInt(RESET_PASSWORD_EXPIRE_IN, 10),
    DB_TABLE_USERS,
    DB_TABLE_USER_FOLLOWS,
    DB_TABLE_ROLES,
    DB_TABLE_USERS_AUTH_PROVIDERS,
    DB_TABLE_SECURITY,
    DB_TABLE_ENTERPRISES,
    DB_TABLE_PROJECTS,
    DB_TABLE_PROJECTS_LIKES,
    DB_TABLE_PROJECTS_SAVES,
    DB_TABLE_PROJECT_SITES,
    DB_TABLE_PROJECT_SITE_PROVIDERS,
    DB_TABLE_PROJECT_IMAGES,
    DB_TABLE_PROJECT_VIDEOS,
    DB_TABLE_PROJECT_MEMBERS,
    DB_TABLE_PROJECT_CATEGORIES,
    DB_TABLE_PROJECT_CATEGORY_TYPES,
    DB_TABLE_TAGS,
    DB_TABLE_PROJECT_TAGS,
    DB_TABLE_PROJECT_SAVES,
    DB_TABLE_PROJECT_LIKES,
    DB_TABLE_PROJECT_COMMENTS,
    DB_TABLE_PROJECT_COMMENT_LIKES,
    DB_TABLE_UNIVERSES,
    DB_TABLE_SAGAS,
    DB_TABLE_BOOKS,
    DB_TABLE_CHAPTERS,
    DB_TABLE_CHARACTERS,
    DB_TABLE_CHARACTER_APPEARANCES,
    DB_TABLE_CHARACTER_RELATIONSHIPS,
    DB_TABLE_CHARACTER_TIMELINE,
}