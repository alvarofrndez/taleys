@use '@/assets/variables.scss' as variables;
@use '@/assets/mixins.scss' as mixins;

.header {
  // Size
  width: 100%;
  height: var(--header-height);
  
  // Position
  position: sticky;
  top: 0;
  left: 0;
  z-index: variables.$z-index-header;
  
  // Display
  @include mixins.flex(row, space-between, center);
  
  // Margin - Espaciado responsive usando los nuevos mixins
  padding: 0 variables.$spacing-4;
  
  // Decoration
  border-bottom: variables.$border-width-thin solid var(--color-border);
  background-color: var(--color-white);
  backdrop-filter: blur(50px);
  
  .info {
    @include mixins.flex(row, flex-start, center, nowrap, variables.$spacing-3);
    
    .logo {
      @include mixins.flex(row, flex-start, center, nowrap, variables.$spacing-2);
      cursor: pointer;
      
      h3 {
        font-size: variables.$font-size-base;
        font-weight: variables.$font-weight-semibold;
      }
    }
    
    .separator {
      color: var(--color-accent);
    }
    
    .breadcrumbs {
      @include mixins.flex(row, flex-start, center, nowrap, variables.$spacing-2);
      
      ul {
        @include mixins.flex(row, flex-start, center, nowrap, variables.$spacing-2);
        @include mixins.reset-list;
        
        li {
          font-size: variables.$font-size-sm;
        }
      }
    }
  }

      .logo {
      @include mixins.flex(row, flex-start, center, nowrap, variables.$spacing-2);
      cursor: pointer;
      
      h3 {
        font-size: variables.$font-size-base;
        font-weight: variables.$font-weight-semibold;
      }
    }
  
  .user {
    @include mixins.flex(row, space-between, center, nowrap, variables.$spacing-2);
    
    a {
      @include mixins.flex(row, center, center);
      padding: variables.$spacing-2;
      border-radius: variables.$border-radius-lg;
      transition: background-color variables.$transition-normal variables.$transition-ease-out;
      
    }
    
    .upload {
      @include mixins.flex(row, flex-end, center, nowrap, variables.$spacing-2);
      padding: variables.$spacing-2;
      cursor: pointer;
      border-radius: variables.$border-radius-md;
      transition: background-color variables.$transition-normal variables.$transition-ease-out;
      
      p {
        font-size: variables.$font-size-xs;
        
        // Ocultar texto en pantallas extra peque√±as
        @media (max-width: calc(#{variables.$breakpoint-xs} - 1px)) {
          display: none;
        }
      }
    }
    
    .avatar {
      position: relative;
      margin-left: variables.$spacing-1;
      @include mixins.flex(row, center, center);
    }
  }
  
  .auth {
    @include mixins.flex(row, space-between, center, nowrap, variables.$spacing-2);
  }
}

// ============================================
// VARIANTES DEL HEADER (opcional)
// ============================================

// Header transparente
.header--transparent {
  background-color: transparent;
  border-bottom-color: transparent;
}

// Header con sombra
.header--shadow {
  box-shadow: variables.$shadow-sm;
}

// Header fijo (sin sticky)
.header--fixed {
  position: fixed;
}

// Header compacto (para cuando se hace scroll)
.header--compact {
  --header-height: #{variables.$size-height-header-xs};

  .info .logo h3 {
    font-size: variables.$font-size-sm;
  }
}