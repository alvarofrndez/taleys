@use '@/assets/variables.scss' as variables;

// ============================================
// RESPONSIVE BREAKPOINT MIXINS
// ============================================

// Mobile first approach (min-width)
@mixin respond-above($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}

// Desktop first approach (max-width)
@mixin respond-below($breakpoint) {
  @media (max-width: calc($breakpoint - 1px)) {
    @content;
  }
}

// Between two breakpoints
@mixin respond-between($min-breakpoint, $max-breakpoint) {
  @media (min-width: $min-breakpoint) and (max-width: calc($max-breakpoint - 1px)) {
    @content;
  }
}

// ============================================
// NAMED BREAKPOINT MIXINS (más fáciles de usar)
// ============================================

// Extra small devices
@mixin xs {
  @media (min-width: #{variables.$breakpoint-xs}) {
    @content;
  }
}

@mixin xs-only {
  @media (max-width: calc(#{variables.$breakpoint-sm} - 1px)) {
    @content;
  }
}

// Small devices (mobile)
@mixin sm {
  @media (min-width: #{variables.$breakpoint-sm}) {
    @content;
  }
}

@mixin sm-only {
  @media (min-width: #{variables.$breakpoint-sm}) and (max-width: calc(#{variables.$breakpoint-md} - 1px)) {
    @content;
  }
}

// Medium devices (tablets)
@mixin md {
  @media (min-width: #{variables.$breakpoint-md}) {
    @content;
  }
}

@mixin md-only {
  @media (min-width: #{variables.$breakpoint-md}) and (max-width: calc(#{variables.$breakpoint-lg} - 1px)) {
    @content;
  }
}

// Large devices (laptops)
@mixin lg {
  @media (min-width: #{variables.$breakpoint-lg}) {
    @content;
  }
}

@mixin lg-only {
  @media (min-width: #{variables.$breakpoint-lg}) and (max-width: calc(#{variables.$breakpoint-xl} - 1px)) {
    @content;
  }
}

// Extra large devices (desktop)
@mixin xl {
  @media (min-width: #{variables.$breakpoint-xl}) {
    @content;
  }
}

@mixin xl-only {
  @media (min-width: #{variables.$breakpoint-xl}) and (max-width: calc(#{variables.$breakpoint-2xl} - 1px)) {
    @content;
  }
}

// 2X Extra large devices
@mixin xxl {
  @media (min-width: #{variables.$breakpoint-2xl}) {
    @content;
  }
}

// ============================================
// HEIGHT BREAKPOINT MIXINS
// ============================================

@mixin height-xs {
  @media (max-height: #{variables.$breakpoint-height-xs}) {
    @content;
  }
}

@mixin height-sm {
  @media (max-height: #{variables.$breakpoint-height-sm}) {
    @content;
  }
}

@mixin height-md {
  @media (min-height: #{variables.$breakpoint-height-md}) {
    @content;
  }
}

@mixin height-lg {
  @media (min-height: #{variables.$breakpoint-height-lg}) {
    @content;
  }
}

@mixin height-xl {
  @media (min-height: #{variables.$breakpoint-height-xl}) {
    @content;
  }
}

// ============================================
// ORIENTATION MIXINS
// ============================================

@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}

@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

// ============================================
// DEVICE SPECIFIC MIXINS
// ============================================

@mixin mobile {
  @media (max-width: calc(#{variables.$breakpoint-md} - 1px)) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{variables.$breakpoint-md}) and (max-width: calc(#{variables.$breakpoint-lg} - 1px)) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{variables.$breakpoint-lg}) {
    @content;
  }
}

// ============================================
// TOUCH/HOVER MIXINS
// ============================================

@mixin touch-device {
  @media (hover: none) and (pointer: coarse) {
    @content;
  }
}

@mixin hover-device {
  @media (hover: hover) and (pointer: fine) {
    @content;
  }
}

// ============================================
// DARK MODE MIXIN
// ============================================

@mixin dark-mode {
  [data-theme="dark"] &,
  .dark & {
    @content;
  }
}

// ============================================
// PRINT MIXIN
// ============================================

@mixin print {
  @media print {
    @content;
  }
}

// ============================================
// REDUCED MOTION MIXIN
// ============================================

@mixin reduced-motion {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

// ============================================
// UTILITY MIXINS
// ============================================

// Truncate text with ellipsis
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Line clamp (multi-line truncate)
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Visually hide element (accessible)
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

// Reset visually hidden
@mixin visually-shown {
  position: static;
  width: auto;
  height: auto;
  padding: initial;
  margin: initial;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

// Aspect ratio
@mixin aspect-ratio($width, $height) {
  aspect-ratio: #{$width} / #{$height};
  
  @supports not (aspect-ratio: 1 / 1) {
    position: relative;
    
    &::before {
      content: '';
      display: block;
      padding-bottom: calc(($height / $width) * 100%);
    }
    
    > * {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}

// Smooth scroll
@mixin smooth-scroll {
  scroll-behavior: smooth;
  
  @include reduced-motion {
    scroll-behavior: auto;
  }
}

// Reset list
@mixin reset-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

// Reset button
@mixin reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  color: inherit;
  cursor: pointer;
  
  &:focus {
    outline: none;
  }
}

// Focus visible
@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
    @content;
  }
}

// Scrollbar styling
@mixin custom-scrollbar($width: 8px, $track-color: var(--color-muted), $thumb-color: var(--color-accent)) {
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;
  
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: variables.$border-radius-full;
    
    &:hover {
      background: var(--color-accent-hover);
    }
  }
}